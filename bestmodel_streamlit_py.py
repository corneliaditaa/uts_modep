# -*- coding: utf-8 -*-
"""bestmodel_streamlit.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Qhs1BeF0V88oofRkViGUOQ-OlfKi44Gz
"""

import streamlit as st
import joblib
import numpy as np

model = joblib.load('best_model.pkl')

def main():
    st.title("üè¶ Loan Approval Application üè¶")
    st.write("DTSC6012001 - Model Deployment Mid Exam 2025")

    # Input sliders & dropdowns
    age = st.slider('Age', 18, 100)
    income = st.number_input('Income', min_value=0, max_value=100_000_000)
    emp_exp = st.slider('Employment Experience (Years)', 0, 50)
    loan_amnt = st.number_input('Loan Amount', min_value=1_000_000, max_value=50_000_000)
    int_rate = st.slider('Interest Rate (%)', 0.0, 30.0)
    cred_hist = st.slider('Credit History Length (Years)', 1, 30)
    credit_score = st.slider('Credit Score', 300, 850)
    gender = st.selectbox('Gender', ['male', 'female'])
    home_own = st.selectbox('Home Ownership', ['RENT', 'MORTGAGE', 'OWN'])
    loan_intent = st.selectbox('Loan Intent', ['EDUCATION', 'MEDICAL', 'VENTURE', 'PERSONAL', 'DEBTCONSOLIDATION', 'HOMEIMPROVEMENT'])
    previous_default = st.selectbox('Previous Loan Default', ['Yes', 'No'])
    education = st.selectbox('Education Level', ['High School', 'Associate', 'Bachelor', 'Master', 'Doctorate'])

    if st.button('Predict Loan Status'):
        gender_encoded = 1 if gender == 'male' else 0
        home_ownership_encoded = [1 if home_own == status else 0 for status in ['OWN', 'RENT', 'MORTGAGE']]
        loan_intent_encoded = [1 if loan_intent == intent else 0 for intent in ['EDUCATION', 'HOMEIMPROVEMENT', 'MEDICAL', 'PERSONAL', 'VENTURE']]

        education_map = {
            'High School': 0,
            'Associate': 1,
            'Bachelor': 2,
            'Master': 3,
            'Doctorate': 4
        }

        features = [
            age,
            income,
            emp_exp,
            loan_amnt,
            int_rate,
            loan_amnt / (income + 1e-6),  # loan_percent_income
            cred_hist,
            credit_score,
            education_map[education],
            1 if previous_default == 'Yes' else 0,
            gender_encoded,
            *home_ownership_encoded,
            *loan_intent_encoded
        ]

        input_array = np.array(features).reshape(1, -1)

        # Make prediction
        prediction = model.predict(input_array)[0]
        result = '‚úÖ Loan Approved' if prediction == 1 else '‚ùå Loan Rejected'
        st.success(f"The prediction is: {result}")

if __name__ == '__main__':
    main()